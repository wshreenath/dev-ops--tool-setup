TOOL SETUP ON RHEL  


===================================================================================================================
 RHEL SUBSCRIPTION or repository PROBLEM : -
 
    getting issue downloading any package disable the subscription  :         
    
            Disable the Subscription Management Plugin (If You Don't Have a Subscription): 
            
            sudo vim /etc/dnf/plugins/subscription-manager.conf
                  enable=0                         ;change the value from 1 to 0 
                  
                  
                  
                  
                  
======================================================================================================================
   UNABLE TO FIND OR RUN  MINIKUBE VERSION CMD, HOW TO SOLVE ERROR:-
   
   
   ERROR:-
            -bash: minikube: command not found
            
   ChatGPT said:
            Encountering the -bash: minikube: command not found error indicates that the Minikube executable is not accessible in your system's PATH. To resolve this issue on RHEL 9.5, follow these steps:

   1. Verify Minikube Installation:-
   
            Ensure that Minikube is installed on your system:

            which minikube
           
           If this command returns a path (e.g., /usr/local/bin/minikube), Minikube is installed but might not be in your PATH. If it returns nothing, Minikube is not installed.

   2. Add Minikube to Your PATH:-
   
            If Minikube is installed but not in your PATH, you can create a symbolic link to make it accessible:

            sudo ln -s /usr/local/bin/minikube /usr/bin/minikube
            
            This command creates a link, allowing you to run minikube from any terminal session.

   3. Install Minikube (If Not Installed):-
   
            If Minikube is not installed, you can download and install it using the following commands:

           
            curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
            sudo install minikube-linux-amd64 /usr/local/bin/minikube
           
           After installation, verify it by checking the version:

         
            minikube version

   4. Verify Permissions:-
   
            Ensure that the Minikube binary has the correct permissions:

            ls -l /usr/local/bin/minikube
           
           The output should show that the file is executable. If not, adjust the permissions:

            sudo chmod +x /usr/local/bin/minikube
   
   5. Check for Alias or Typographical Errors:-
   
            Ensure you're typing the command correctly and that no shell aliases are interfering:

            alias | grep minikube
   
            If there's an alias causing issues, you can remove it:

            unalias minikube
   
   6. Restart Your Shell or System:-
   
            After making these changes, restart your terminal or system to ensure all configurations are applied correctly.

            By following these steps, you should be able to resolve the -bash: minikube: command not found error and successfully run Minikube on your RHEL 9.5 system.
                           
            
            
            
            
============================================================================

  Install Docker on RHEL 9.5
               By default, RHEL 9 does not include Docker in its official repositories because Red Hat promotes Podman as a replacement. However, you can install Docker from the Docker CE (Community Edition) repository.

    Step 1: Uninstall Podman (If Necessary)
               
               Since Podman is installed by default in RHEL 9, remove it if you want to avoid conflicts:
               sudo dnf remove -y podman buildah
  
  Step 2: Enable Docker Repository:-
  
               Docker is not included in the default RHEL repositories, so you need to enable the Docker CE repository:
               sudo dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
      
      Verify the repository is added:-
              
               sudo dnf repolist | grep docker
  
  Step 3: Install Docker:-
  
               Now install Docker and related components:
               sudo dnf install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
               
      Confirm installation:-
             
               docker --version
   
   Step 4: Enable and Start Docker Service

               sudo systemctl enable --now docker
       
      Check if Docker is running:

              
               sudo systemctl status docker
   
   Step 5: Add User to Docker Group (Optional)
               To allow running Docker without sudo, add your user to the docker group:

             
               sudo usermod -aG docker $USER
      Apply the changes:

              
               newgrp docker
   
   Step 6: Verify Installation
               Run a test container:

              
               docker run hello-world
   
   Step 7: Configure Firewall (If Needed)
               If your firewall is enabled, allow Docker traffic:
              
               sudo firewall-cmd --permanent --zone=public --add-masquerade
               sudo firewall-cmd --reload
  
   Step 8: Enable Docker to Start on Boot (Optional)
              
               sudo systemctl enable docker




==============================================================================================================

   HOW INSTALL MINIKUBE ON RHEL 9.5:-
   
   ChatGPT said:
               Install Minikube on RHEL 9.5
               
               Minikube is a lightweight Kubernetes implementation that runs on a local machine. It is useful for testing and development.
               Here’s how you can install Minikube on RHEL 9.5.

   Step 1: Install Required Dependencies:-
   
               Ensure your system has the necessary dependencies:

            ;   sudo dnf install -y curl conntrack socat ebtables iptables
               sudo dnf install -y curl conntrack socat ebtables iptables
               
               If you plan to use Docker as the container runtime, install it first:

               sudo dnf install -y docker-ce docker-ce-cli containerd.io
               sudo systemctl enable --now docker
               
         OR       
               For Podman users, install the Podman machine driver:

              
               sudo dnf install -y podman
  
  Step 2: Download Minikube:-
  
               Download the latest Minikube binary:

               curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64

               Move the binary to /usr/local/bin and give it execution permission:

               sudo install minikube-linux-amd64 /usr/local/bin/minikube
               sudo ln -s /usr/local/bin/minikube /usr/bin/minikube
               

               Verify the installation:
               minikube version
               
   Step 3: Start Minikube:-
   
               You can start Minikube with different drivers. The most common are:

         1. Using Docker (Recommended)

               minikube start --driver=docker
      OR 
      
         2. Using Podman
               minikube start --driver=podman
      
      OR 
      
         3. Using KVM (If Installed)

               minikube start --driver=kvm2


   Step 4: Verify Minikube Installation:-
   
               Check the status of the Minikube cluster:

               minikube status
               
               You can also check the Kubernetes nodes:

               kubectl get nodes
   
   Step 5: Enable kubectl (If Not Installed):-
   
               Minikube includes kubectl, but you may need to install it manually:

               sudo dnf install -y kubernetes-client
         OR    
         
               To use kubectl with Minikube:

               alias kubectl="minikube kubectl --"

   Step 6: Enable Minikube Dashboard (Optional):-

               To start the Kubernetes dashboard, run:

               minikube dashboard

   Step 7: Configure Firewall (If Needed):-
   
               If you face connectivity issues, allow traffic through the firewall:

               sudo firewall-cmd --permanent --add-masquerade
               sudo firewall-cmd --reload

================================================================================================================================
   HOW TO INSTALL KUBECTL :-
   
   ChatGPT said:
   Install kubectl on RHEL 9.5:-
   
               kubectl is the Kubernetes command-line tool used to manage Kubernetes clusters. Here’s how you can install it on RHEL 9.5.

   Step 1: Add the Kubernetes Repository:-
   
               Kubernetes provides an official repository with kubectl. Add it to your system:

                     cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
                     [kubernetes]
                     name=Kubernetes
                     baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el9-\$basearch
                     enabled=1
                     gpgcheck=1
                     repo_gpgcheck=1
                     gpgkey=https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
                     EOF
             
   Step 2: Install kubectl:-
   
               Now install kubectl using dnf:

               sudo dnf install -y kubectl
   
   Step 3: Verify the Installation:-
   
               Check if kubectl is installed correctly:

               kubectl version --client

               It should display the client version.

   Step 4: Enable Auto-Completion (Optional):-

               To enable shell auto-completion for kubectl:

               echo 'source <(kubectl completion bash)' >> ~/.bashrc
               source ~/.bashrc
               
         OR       
               For zsh users:

               echo 'source <(kubectl completion zsh)' >> ~/.zshrc
               source ~/.zshrc
              
   Step 5: Test kubectl with Minikube (If Installed):-
   
               If you have Minikube running, check if kubectl can access the cluster:

               kubectl get nodes

==============================================================================================================
   FACING ISSUE FOR DOWNLOADING PACKAGES FOR KUBECTL OR GETTING ERROR WHILE INSTALLING KUBECTL AS BELOW :-

   RESOLVE THIS ERROR ,KUBERNETES REPOSITORY    :-
               Errors during downloading metadata for repository 'kubernetes':
                 - Status code: 404 for https://packages.cloud.google.com/yum/repos/kubernetes-el9-x86_64/repodata/repomd.xml (IP: 172.253.63.101)
               Error: Failed to download metadata for repo 'kubernetes': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried
   
   ChatGPT said:-
               The error you're encountering:

               Errors during downloading metadata for repository 'kubernetes': Status code: 404 for https://packages.cloud.google.com/yum/repos/kubernetes-el9-x86_64/repodata/repomd.xml (IP: 172.253.63.101) Error: Failed to download metadata for repo 'kubernetes': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried

   SOLUTION:-
               indicates that the Kubernetes repository URL configured on your system is no longer accessible, resulting in a 404 Not Found error. This issue has arisen because the Kubernetes project has transitioned from the legacy Google-hosted package repositories to new community-owned repositories. 
               
               DISCUSS KUBERNETES:-

               To resolve this issue, you need to update your Kubernetes repository configuration to point to the new repository. Here's how you
               can do it:

   1  Remove the Old Repository Configuration:

               First, identify and remove the existing Kubernetes repository configuration file:

               sudo rm -f /etc/yum.repos.d/kubernetes.repo
               
   2  Add the New Kubernetes Repository:

               Create a new repository configuration file with the updated base URL:

                     sudo tee /etc/yum.repos.d/kubernetes.repo<<EOF
                     [kubernetes]
                     name=Kubernetes
                     baseurl=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
                     enabled=1
                     gpgcheck=1
                     gpgkey=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key
                     EOF
               
               This configuration points to the new Kubernetes package repository. 

   3  Clean the DNF Cache:

               After updating the repository configuration, clear the DNF cache to ensure it recognizes the new repository:

               sudo dnf clean all

   4  Install or Update Kubernetes Packages:

               You can now install or update Kubernetes packages as needed:

               sudo dnf install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
               
               This command installs the Kubernetes components from the newly configured repository.

   Note:-      Ensure that your system meets all prerequisites for installing Kubernetes, such as disabling swap and configuring the 
               necessary kernel modules.

               By following these steps, you should be able to resolve the 404 error and successfully install or update Kubernetes on your RHEL 9 system using the new repository


===================================================================================================================================

   HOW TO CHECK ENABLED SOCKET:-
               like docker or podman 


   ChatGPT said:-
               On RHEL 9.5, you can check whether a socket is enabled using systemctl.

      Check Enabled Sockets:-
               To list all enabled sockets:-

                  systemctl list-sockets
                  
               To check if a specific socket is enabled, use:-

                  systemctl is-enabled <socket-name>.socket
                  systemctl is-enabled podman.socket
                  systemctl is-enabled docker.socket
                  
               To check if a specific socket is active, use:
               
                  systemctl is-active <socket-name>.socket
                  systemctl is-active docker.socket
                  
               Check Status of a Specific Socket
                 
                  systemctl status <socket-name>.socket
                  systemctl status docker.socket
                  
      List All Listening Sockets:-
                  To see all sockets currently listening on the system:

                  ss -tulnp
            OR 
                  netstat -tulnp   # Requires `net-tools` package

===================================================================================================================================
      HOW TO STOP INSTALLING PACKAGE FOR DOCKER CE STABLE IN RHEL :-
      HOW TO STOP INSTALLING PACKAGE FOR SPECIFIC TOOL  IN RHEL :-


               
      ChatGPT said:
               To prevent the installation of the Docker CE (Community Edition) package on a Red Hat Enterprise Linux (RHEL) system, you can take the following measures:

      1. Exclude Docker Packages in DNF/YUM Configuration:-
      
               Modify the DNF or YUM configuration to exclude Docker packages from being installed:
         -      For DNF (RHEL 8 and later):
               Edit the DNF configuration file:

               sudo vim /etc/dnf/dnf.conf
               
               Add the following line to exclude Docker packages:-

               exclude=docker-ce-stable*
               
         -      For YUM (RHEL 7):
               Edit the YUM configuration file:

               sudo vim /etc/yum.conf
               
               Add the exclusion line:-

               exclude=docker-ce-stable*
               
               This configuration ensures that any attempts to install Docker CE stable packages will be skipped.

     2. Disable Docker CE Repository:-
     
               If the Docker CE repository has been added to your system, you can disable it to prevent accidental installations:

               sudo dnf config-manager --disable docker-ce-stable
         OR
               if using YUM:
               
               sudo yum-config-manager --disable docker-ce-stable
               
               This command disables the Docker CE repository, making its packages unavailable for installation.

      3. Use Version Lock Plugin:-
      
               To prevent specific versions of Docker from being installed or updated, you can use the version lock plugin:

            -   For DNF (RHEL 8 and later):-
               Install the version lock plugin:-

               sudo dnf install python3-dnf-plugin-versionlock
               
               Lock the Docker package:-

               sudo dnf versionlock add docker-ce
         OR      
            -   For YUM (RHEL 7):-
               Install the version lock plugin:-

               sudo yum install yum-plugin-versionlock

               Lock the Docker package:-

               sudo yum versionlock docker-ce

               This approach ensures that the specified Docker package version remains locked and cannot be installed or updated inadvertently.

      4. Remove Existing Docker Packages:-
               If Docker CE is already installed and you wish to remove it:-

               sudo dnf remove docker-ce docker-ce-cli containerd.io
         OR  
               
            -   for YUM:

               sudo yum remove docker-ce docker-ce-cli containerd.io
               
               After removal, consider implementing the above measures to prevent reinstallation.
               Note: Red Hat recommends using Podman as an alternative to Docker. Podman offers similar functionalities and is designed to 
               work seamlessly on RHEL systems. 

========================================================================================================================

   HOW TO REMOVE REPOSITORY  IN DNF OR REPOLIST  :-
    
   ChatGPT said:
               TO REMOVE A REPOSITORY FROM YOUR SYSTEM'S DNF CONFIGURATION ON RED HAT ENTERPRISE LINUX (RHEL), FOLLOW THESE STEPS:

      1. Identify the Repository File:-
      
               Repositories are typically defined in .repo files located in the /etc/yum.repos.d/ directory. To identify which file corresponds to the repository you wish to remove, you can list all repository files:

               ls /etc/yum.repos.d/
         OR
               Alternatively, to find a specific repository (e.g., one containing "docker" in its name), use:
              
               grep -l 'docker' /etc/yum.repos.d/*.repo
               
               This command searches for the term "docker" within all .repo files and lists those that contain it.

      2. Remove the Repository File:-
      
               Once you've identified the appropriate .repo file, you can remove it using the rm command:

              
               sudo rm /etc/yum.repos.d/<repository-file-name>.repo
               
               Replace <repository-file-name> with the actual name of the repository file you wish to delete. For example, if the file is 
               named docker-ce.repo, the command would be:-

               sudo rm /etc/yum.repos.d/docker-ce.repo
               
               Note: Exercise caution when removing repository files to ensure you do not inadvertently delete essential repositories.

      3. Verify the Repository Removal:-
      
               After removing the repository file, verify that the repository has been successfully removed:

               sudo dnf repolist

               This command lists all enabled repositories. Confirm that the repository you removed no longer appears in the list.


====================================================================================================================================
